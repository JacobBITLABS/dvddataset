import type { IDelta } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IDelta";
import type { IParticleColorStyle } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IParticleColorStyle";
import type { IParticleTransformValues } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IParticleTransformValues";
import type { IParticlesOptions } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Interfaces/Particles/IParticlesOptions";
import type { Particle } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Particle";
import type { ParticlesOptions } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/Particles/ParticlesOptions";
import type { RecursivePartial } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Types/RecursivePartial";
export interface IParticleUpdater {
    afterDraw?: (particle: Particle) => void;
    beforeDraw?: (particle: Particle) => void;
    getColorStyles?: (particle: Particle, context: CanvasRenderingContext2D, radius: number, opacity: number) => IParticleColorStyle;
    getTransformValues?: (particle: Particle) => IParticleTransformValues;
    loadOptions?: (options: ParticlesOptions, ...sources: (RecursivePartial<IParticlesOptions> | undefined)[]) => void;
    particleDestroyed?: (particle: Particle, override?: boolean) => void;
    reset?: (particle: Particle) => void;
    init(particle: Particle): void;
    isEnabled(particle: Particle): boolean;
    update(particle: Particle, delta: IDelta): void;
}
