import type { IDelta } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IDelta";
import type { IParticlesOptions } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Interfaces/Particles/IParticlesOptions";
import type { ISourceOptions } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Types/ISourceOptions";
import type { InteractorType } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Enums/Types/InteractorType";
import type { Options } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/Options";
import type { Particle } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Particle";
import type { ParticlesOptions } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/Particles/ParticlesOptions";
import type { RecursivePartial } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Types/RecursivePartial";
export interface IInteractor {
    loadOptions?: (options: Options, ...sources: (ISourceOptions | undefined)[]) => void;
    loadParticlesOptions?: (options: ParticlesOptions, ...sources: (RecursivePartial<IParticlesOptions> | undefined)[]) => void;
    type: InteractorType;
    clear(particle: Particle, delta: IDelta): void;
    init(): void;
    reset(particle: Particle): void;
}
