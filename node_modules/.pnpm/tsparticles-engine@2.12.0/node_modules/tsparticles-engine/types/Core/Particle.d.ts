import type { ICenterCoordinates, ICoordinates, ICoordinates3d } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/ICoordinates";
import type { IHsl, IRgb } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/Colors";
import type { Container } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Container";
import type { Engine } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Engine";
import type { IBubbleParticleData } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IBubbleParticleData";
import type { IDelta } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IDelta";
import type { IMovePathGenerator } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IMovePathGenerator";
import type { IParticle } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IParticle";
import type { IParticleHslAnimation } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IParticleHslAnimation";
import type { IParticleNumericValueAnimation } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IParticleValueAnimation";
import type { IParticleRetinaProps } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IParticleRetinaProps";
import type { IParticleRoll } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IParticleRoll";
import type { IParticlesOptions } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Interfaces/Particles/IParticlesOptions";
import type { IShapeValues } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/IShapeValues";
import type { ISlowParticleData } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Interfaces/ISlowParticleData";
import { Interactivity } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/Interactivity/Interactivity";
import { ParticleOutType } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Enums/Types/ParticleOutType";
import type { ParticlesOptions } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/Particles/ParticlesOptions";
import type { RecursivePartial } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Types/RecursivePartial";
import { Vector } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Utils/Vector";
import { Vector3d } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Utils/Vector3d";
export declare class Particle implements IParticle {
    readonly container: Container;
    backColor?: IHsl;
    bubble: IBubbleParticleData;
    close: boolean;
    color?: IParticleHslAnimation;
    destroyed: boolean;
    direction: number;
    fill: boolean;
    group?: string;
    id: number;
    ignoresResizeRatio: boolean;
    initialPosition: Vector;
    initialVelocity: Vector;
    interactivity: Interactivity;
    lastPathTime: number;
    misplaced: boolean;
    moveCenter: ICenterCoordinates;
    moveDecay: number;
    offset: Vector;
    opacity?: IParticleNumericValueAnimation;
    options: ParticlesOptions;
    outType: ParticleOutType;
    pathDelay: number;
    pathGenerator?: IMovePathGenerator;
    pathRotation: boolean;
    position: Vector3d;
    randomIndexData?: number;
    retina: IParticleRetinaProps;
    roll?: IParticleRoll;
    rotation: number;
    shadowColor?: IRgb;
    shape: string;
    shapeData?: IShapeValues;
    sides: number;
    size: IParticleNumericValueAnimation;
    slow: ISlowParticleData;
    spawning: boolean;
    strokeColor?: IParticleHslAnimation;
    strokeOpacity?: number;
    strokeWidth?: number;
    unbreakable: boolean;
    velocity: Vector;
    zIndexFactor: number;
    private readonly _engine;
    constructor(engine: Engine, id: number, container: Container, position?: ICoordinates, overrideOptions?: RecursivePartial<IParticlesOptions>, group?: string);
    destroy(override?: boolean): void;
    draw(delta: IDelta): void;
    getFillColor(): IHsl | undefined;
    getMass(): number;
    getPosition(): ICoordinates3d;
    getRadius(): number;
    getStrokeColor(): IHsl | undefined;
    init(id: number, position?: ICoordinates, overrideOptions?: RecursivePartial<IParticlesOptions>, group?: string): void;
    isInsideCanvas(): boolean;
    isVisible(): boolean;
    reset(): void;
    private readonly _calcPosition;
    private readonly _calculateVelocity;
    private readonly _checkOverlap;
    private readonly _getRollColor;
    private readonly _initPosition;
    private readonly _loadShapeData;
}
