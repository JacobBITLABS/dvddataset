import { Background } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/Background/Background";
import { BackgroundMask } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/BackgroundMask/BackgroundMask";
import type { Container } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Container";
import type { Engine } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Engine";
import { FullScreen } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/FullScreen/FullScreen";
import type { IOptionLoader } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Interfaces/IOptionLoader";
import type { IOptions } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Interfaces/IOptions";
import { Interactivity } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/Interactivity/Interactivity";
import { ManualParticle } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/ManualParticle";
import type { RangeValue } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Types/RangeValue";
import type { RecursivePartial } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Types/RecursivePartial";
import { Responsive } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/Responsive";
import type { SingleOrMultiple } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Types/SingleOrMultiple";
import { Theme } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/Theme/Theme";
interface DefaultThemes {
    dark?: string;
    light?: string;
}
export declare class Options implements IOptions, IOptionLoader<IOptions> {
    [name: string]: unknown;
    autoPlay: boolean;
    background: Background;
    backgroundMask: BackgroundMask;
    defaultThemes: DefaultThemes;
    delay: RangeValue;
    detectRetina: boolean;
    duration: RangeValue;
    fpsLimit: number;
    fullScreen: FullScreen;
    interactivity: Interactivity;
    manualParticles: ManualParticle[];
    name?: string;
    particles: import(".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/Particles/ParticlesOptions").ParticlesOptions;
    pauseOnBlur: boolean;
    pauseOnOutsideViewport: boolean;
    preset?: SingleOrMultiple<string>;
    responsive: Responsive[];
    smooth: boolean;
    style: RecursivePartial<CSSStyleDeclaration>;
    themes: Theme[];
    zLayers: number;
    private readonly _container;
    private readonly _engine;
    constructor(engine: Engine, container: Container);
    get backgroundMode(): FullScreen;
    set backgroundMode(value: FullScreen);
    get fps_limit(): number;
    set fps_limit(value: number);
    get retina_detect(): boolean;
    set retina_detect(value: boolean);
    load(data?: RecursivePartial<IOptions>): void;
    setResponsive(width: number, pxRatio: number, defaultOptions: IOptions): number | undefined;
    setTheme(name?: string): void;
    private readonly _findDefaultTheme;
    private readonly _importPreset;
}
export {};
