import type { Container } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Container";
import type { Engine } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Core/Engine";
import { Events } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/Interactivity/Events/Events";
import type { IInteractivity } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Interfaces/Interactivity/IInteractivity";
import type { IOptionLoader } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Interfaces/IOptionLoader";
import { InteractivityDetect } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Enums/InteractivityDetect";
import { Modes } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Classes/Interactivity/Modes/Modes";
import type { RecursivePartial } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Types/RecursivePartial";
export declare class Interactivity implements IInteractivity, IOptionLoader<IInteractivity> {
    [name: string]: unknown;
    detectsOn: InteractivityDetect | keyof typeof InteractivityDetect;
    events: Events;
    modes: Modes;
    constructor(engine: Engine, container?: Container);
    get detect_on(): InteractivityDetect | keyof typeof InteractivityDetect;
    set detect_on(value: InteractivityDetect | keyof typeof InteractivityDetect);
    load(data?: RecursivePartial<IInteractivity>): void;
}
