import type { DivMode } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Enums/Modes/DivMode";
import { DivType } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Enums/Types/DivType";
import type { IDivEvent } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Interfaces/Interactivity/Events/IDivEvent";
import type { IOptionLoader } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Options/Interfaces/IOptionLoader";
import type { RecursivePartial } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Types/RecursivePartial";
import type { SingleOrMultiple } from ".pnpm/tsparticles-engine@2.12.0/node_modules/tsparticles-engine/types/Types/SingleOrMultiple";
export declare class DivEvent implements IDivEvent, IOptionLoader<IDivEvent> {
    enable: boolean;
    mode: SingleOrMultiple<DivMode | keyof typeof DivMode | string>;
    selectors: SingleOrMultiple<string>;
    type: DivType | keyof typeof DivType;
    constructor();
    get el(): SingleOrMultiple<string>;
    set el(value: SingleOrMultiple<string>);
    get elementId(): SingleOrMultiple<string>;
    set elementId(value: SingleOrMultiple<string>);
    get ids(): SingleOrMultiple<string>;
    set ids(value: SingleOrMultiple<string>);
    load(data?: RecursivePartial<IDivEvent>): void;
}
